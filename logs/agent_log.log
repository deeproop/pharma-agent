2025-10-22 19:27:41,569 - INFO - app.py:25 - --- Logger Initialized ---
2025-10-22 19:27:49,125 - INFO - app.py:75 - Processing search for: 'aspirin'
2025-10-22 19:27:49,127 - INFO - app.py:84 - Updated search history: ['aspirin']
2025-10-22 19:27:49,134 - INFO - graph.py:89 - --- NODE: Normalizing drug name ---
2025-10-22 19:27:49,137 - INFO - graph.py:97 - --- NODE: Checking local RAG database ---
2025-10-22 19:27:49,139 - INFO - tools.py:47 - --- TOOL: Checking local DB for 'aspirin' ---
2025-10-22 19:27:52,033 - WARNING - tools.py:63 - Low confidence match (score: 1.0152926445007324). Ignoring.
2025-10-22 19:27:52,046 - INFO - graph.py:101 - Drug not found locally.
2025-10-22 19:27:52,047 - INFO - graph.py:108 - --- NODE: Checking external FDA API ---
2025-10-22 19:27:52,049 - INFO - tools.py:74 - --- TOOL: Querying FDA API for 'aspirin' ---
2025-10-22 19:27:55,603 - INFO - tools.py:101 - Found match for 'aspirin' in FDA API.
2025-10-22 19:27:55,607 - INFO - graph.py:115 - Drug found in FDA API.
2025-10-22 19:27:55,609 - INFO - graph.py:127 - --- NODE: Classifying ingredients (with web search) ---
2025-10-22 19:27:55,613 - INFO - tools.py:125 - --- TOOL: Performing web search for 'therapeutic category and common allergens for Active ingredient (in each tablet) Aspirin' ---
2025-10-22 19:28:18,179 - INFO - graph.py:149 - Successfully classified ingredients.
2025-10-22 19:28:18,180 - INFO - graph.py:160 - --- NODE: Finding alternatives (with web search) ---
2025-10-22 19:28:18,181 - INFO - tools.py:125 - --- TOOL: Performing web search for 'alternative brand names for Active ingredient (in each tablet) Aspirin' ---
2025-10-22 19:31:36,305 - INFO - app.py:25 - --- Logger Initialized ---
2025-10-22 19:31:36,305 - INFO - app.py:25 - --- Logger Initialized ---
2025-10-22 19:31:36,305 - INFO - app.py:25 - --- Logger Initialized ---
2025-10-22 19:31:36,305 - INFO - app.py:25 - --- Logger Initialized ---
2025-10-22 19:31:46,708 - INFO - app.py:75 - Processing search for: 'aspirin'
2025-10-22 19:31:46,708 - INFO - app.py:75 - Processing search for: 'aspirin'
2025-10-22 19:31:46,710 - INFO - app.py:84 - Updated search history: ['aspirin']
2025-10-22 19:31:46,710 - INFO - app.py:84 - Updated search history: ['aspirin']
2025-10-22 19:31:46,717 - INFO - graph.py:89 - --- NODE: Normalizing drug name ---
2025-10-22 19:31:46,717 - INFO - graph.py:89 - --- NODE: Normalizing drug name ---
2025-10-22 19:31:46,721 - INFO - graph.py:97 - --- NODE: Checking local RAG database ---
2025-10-22 19:31:46,721 - INFO - graph.py:97 - --- NODE: Checking local RAG database ---
2025-10-22 19:31:46,724 - INFO - tools.py:47 - --- TOOL: Checking local DB for 'aspirin' ---
2025-10-22 19:31:46,724 - INFO - tools.py:47 - --- TOOL: Checking local DB for 'aspirin' ---
2025-10-22 19:31:49,095 - WARNING - tools.py:63 - Low confidence match (score: 1.0152926445007324). Ignoring.
2025-10-22 19:31:49,095 - WARNING - tools.py:63 - Low confidence match (score: 1.0152926445007324). Ignoring.
2025-10-22 19:31:49,096 - INFO - graph.py:101 - Drug not found locally.
2025-10-22 19:31:49,096 - INFO - graph.py:101 - Drug not found locally.
2025-10-22 19:31:49,098 - INFO - graph.py:108 - --- NODE: Checking external FDA API ---
2025-10-22 19:31:49,098 - INFO - graph.py:108 - --- NODE: Checking external FDA API ---
2025-10-22 19:31:49,100 - INFO - tools.py:74 - --- TOOL: Querying FDA API for 'aspirin' ---
2025-10-22 19:31:49,100 - INFO - tools.py:74 - --- TOOL: Querying FDA API for 'aspirin' ---
2025-10-22 19:31:51,736 - INFO - tools.py:101 - Found match for 'aspirin' in FDA API.
2025-10-22 19:31:51,736 - INFO - tools.py:101 - Found match for 'aspirin' in FDA API.
2025-10-22 19:31:51,739 - INFO - graph.py:115 - Drug found in FDA API.
2025-10-22 19:31:51,739 - INFO - graph.py:115 - Drug found in FDA API.
2025-10-22 19:31:51,741 - INFO - graph.py:127 - --- NODE: Classifying ingredients (with web search) ---
2025-10-22 19:31:51,741 - INFO - graph.py:127 - --- NODE: Classifying ingredients (with web search) ---
2025-10-22 19:31:51,744 - INFO - tools.py:125 - --- TOOL: Performing web search for 'therapeutic category and common allergens for Active ingredient (in each tablet) Aspirin' ---
2025-10-22 19:31:51,744 - INFO - tools.py:125 - --- TOOL: Performing web search for 'therapeutic category and common allergens for Active ingredient (in each tablet) Aspirin' ---
2025-10-22 19:32:07,149 - INFO - graph.py:149 - Successfully classified ingredients.
2025-10-22 19:32:07,149 - INFO - graph.py:149 - Successfully classified ingredients.
2025-10-22 19:32:07,150 - INFO - graph.py:160 - --- NODE: Finding alternatives (with web search) ---
2025-10-22 19:32:07,150 - INFO - graph.py:160 - --- NODE: Finding alternatives (with web search) ---
2025-10-22 19:32:07,152 - INFO - tools.py:125 - --- TOOL: Performing web search for 'alternative brand names for Active ingredient (in each tablet) Aspirin' ---
2025-10-22 19:32:07,152 - INFO - tools.py:125 - --- TOOL: Performing web search for 'alternative brand names for Active ingredient (in each tablet) Aspirin' ---
2025-10-22 19:32:25,229 - INFO - graph.py:184 - Found alternatives: ['Ecotrin', 'Vazalore', 'Bayer Aspirin', 'Aspro Clear', 'Disprin']
2025-10-22 19:32:25,229 - INFO - graph.py:184 - Found alternatives: ['Ecotrin', 'Vazalore', 'Bayer Aspirin', 'Aspro Clear', 'Disprin']
2025-10-22 19:32:25,231 - INFO - app.py:92 - Graph execution finished for 'aspirin'. Final State keys: dict_keys(['drug_name', 'original_drug_name', 'data', 'classification', 'alternatives', 'error'])
2025-10-22 19:32:25,231 - INFO - app.py:92 - Graph execution finished for 'aspirin'. Final State keys: dict_keys(['drug_name', 'original_drug_name', 'data', 'classification', 'alternatives', 'error'])
2025-10-22 19:48:23,156 - INFO - app.py:25 - --- Logger Initialized ---
2025-10-22 19:48:29,032 - INFO - app.py:78 - Processing search for: 'aspirin'
2025-10-22 19:48:29,033 - INFO - app.py:87 - Updated search history: ['aspirin']
2025-10-22 19:48:29,041 - INFO - graph.py:89 - --- NODE: Normalizing drug name ---
2025-10-22 19:48:29,043 - INFO - graph.py:97 - --- NODE: Checking local RAG database ---
2025-10-22 19:48:29,046 - INFO - tools.py:47 - --- TOOL: Checking local DB for 'aspirin' ---
2025-10-22 19:48:31,036 - WARNING - tools.py:63 - Low confidence match (score: 1.0152926445007324). Ignoring.
2025-10-22 19:48:31,037 - INFO - graph.py:101 - Drug not found locally.
2025-10-22 19:48:31,038 - INFO - graph.py:108 - --- NODE: Checking external FDA API ---
2025-10-22 19:48:31,040 - INFO - tools.py:74 - --- TOOL: Querying FDA API for 'aspirin' ---
2025-10-22 19:48:33,352 - INFO - tools.py:101 - Found match for 'aspirin' in FDA API.
2025-10-22 19:48:33,354 - INFO - graph.py:115 - Drug found in FDA API.
2025-10-22 19:48:33,356 - INFO - graph.py:127 - --- NODE: Classifying ingredients (with web search) ---
2025-10-22 19:48:33,360 - INFO - tools.py:125 - --- TOOL: Performing web search for 'therapeutic category and common allergens for Active ingredient (in each tablet) Aspirin' ---
2025-10-22 19:48:51,206 - INFO - graph.py:149 - Successfully classified ingredients.
2025-10-22 19:48:51,207 - INFO - graph.py:160 - --- NODE: Finding alternatives (with web search) ---
2025-10-22 19:48:51,208 - INFO - tools.py:125 - --- TOOL: Performing web search for 'alternative brand names for Active ingredient (in each tablet) Aspirin' ---
2025-10-22 19:49:04,965 - INFO - graph.py:184 - Found alternatives: ['Ecotrin', 'Vazalore', 'Bayer Aspirin', 'Aspro Clear', 'Disprin']
2025-10-22 19:49:04,968 - INFO - app.py:96 - Graph execution finished for 'aspirin'. Final State keys: dict_keys(['drug_name', 'original_drug_name', 'data', 'classification', 'alternatives', 'error'])
2025-10-22 19:49:35,202 - INFO - app.py:25 - --- Logger Initialized ---
2025-10-22 19:50:28,486 - INFO - app.py:75 - Processing search for: 'aspirin'
2025-10-22 19:50:28,487 - INFO - app.py:84 - Updated search history: ['aspirin']
2025-10-22 19:50:28,493 - INFO - graph.py:89 - --- NODE: Normalizing drug name ---
2025-10-22 19:50:28,497 - INFO - graph.py:97 - --- NODE: Checking local RAG database ---
2025-10-22 19:50:28,500 - INFO - tools.py:47 - --- TOOL: Checking local DB for 'aspirin' ---
2025-10-22 19:50:30,128 - WARNING - tools.py:63 - Low confidence match (score: 1.0152926445007324). Ignoring.
2025-10-22 19:50:30,129 - INFO - graph.py:101 - Drug not found locally.
2025-10-22 19:50:30,131 - INFO - graph.py:108 - --- NODE: Checking external FDA API ---
2025-10-22 19:50:30,132 - INFO - tools.py:74 - --- TOOL: Querying FDA API for 'aspirin' ---
2025-10-22 19:50:32,832 - INFO - tools.py:101 - Found match for 'aspirin' in FDA API.
2025-10-22 19:50:32,836 - INFO - graph.py:115 - Drug found in FDA API.
2025-10-22 19:50:32,838 - INFO - graph.py:127 - --- NODE: Classifying ingredients (with web search) ---
2025-10-22 19:50:32,840 - INFO - tools.py:125 - --- TOOL: Performing web search for 'therapeutic category and common allergens for Active ingredient (in each tablet) Aspirin' ---
2025-10-22 19:50:51,217 - INFO - graph.py:149 - Successfully classified ingredients.
2025-10-22 19:50:51,220 - INFO - graph.py:160 - --- NODE: Finding alternatives (with web search) ---
2025-10-22 19:50:51,221 - INFO - tools.py:125 - --- TOOL: Performing web search for 'alternative brand names for Active ingredient (in each tablet) Aspirin' ---
2025-10-22 19:50:59,692 - INFO - graph.py:184 - Found alternatives: ['Ecotrin', 'Bayer Aspirin', 'Vazalore', 'Aspro Clear', 'Disprin']
2025-10-22 19:50:59,695 - INFO - app.py:92 - Graph execution finished for 'aspirin'. Final State keys: dict_keys(['drug_name', 'original_drug_name', 'data', 'classification', 'alternatives', 'error'])
2025-10-22 19:51:26,300 - INFO - app.py:75 - Processing search for: 'paracetamol'
2025-10-22 19:51:26,302 - INFO - app.py:84 - Updated search history: ['paracetamol', 'aspirin']
2025-10-22 19:51:26,307 - INFO - graph.py:89 - --- NODE: Normalizing drug name ---
2025-10-22 19:51:26,308 - INFO - graph.py:93 - Normalized 'paracetamol' to 'Acetaminophen'
2025-10-22 19:51:26,310 - INFO - graph.py:97 - --- NODE: Checking local RAG database ---
2025-10-22 19:51:26,312 - INFO - tools.py:47 - --- TOOL: Checking local DB for 'Acetaminophen' ---
2025-10-22 19:51:27,974 - INFO - tools.py:60 - Found local match with score 0.40804848074913025
2025-10-22 19:51:27,975 - INFO - graph.py:104 - Drug found locally.
2025-10-22 19:51:27,977 - INFO - graph.py:127 - --- NODE: Classifying ingredients (with web search) ---
2025-10-22 19:51:27,979 - INFO - tools.py:125 - --- TOOL: Performing web search for 'therapeutic category and common allergens for Acetaminophen' ---
2025-10-22 19:51:46,135 - INFO - graph.py:149 - Successfully classified ingredients.
2025-10-22 19:51:46,136 - INFO - graph.py:160 - --- NODE: Finding alternatives (with web search) ---
2025-10-22 19:51:46,138 - INFO - tools.py:125 - --- TOOL: Performing web search for 'alternative brand names for Acetaminophen' ---
2025-10-22 19:52:01,172 - INFO - graph.py:184 - Found alternatives: ['Panadol', 'Calpol', 'Aceta', 'PediaCare', 'Alvedon']
2025-10-22 19:52:01,175 - INFO - app.py:92 - Graph execution finished for 'paracetamol'. Final State keys: dict_keys(['drug_name', 'original_drug_name', 'data', 'classification', 'alternatives', 'error'])
2025-10-22 19:52:07,889 - INFO - app.py:55 - History selected: 'aspirin'. Updating search bar.
2025-10-22 19:52:07,898 - INFO - app.py:75 - Processing search for: 'aspirin'
2025-10-22 19:52:07,899 - INFO - app.py:84 - Updated search history: ['aspirin', 'paracetamol']
2025-10-22 19:52:07,910 - INFO - graph.py:89 - --- NODE: Normalizing drug name ---
2025-10-22 19:52:07,912 - INFO - graph.py:97 - --- NODE: Checking local RAG database ---
2025-10-22 19:52:07,914 - INFO - tools.py:47 - --- TOOL: Checking local DB for 'aspirin' ---
2025-10-22 19:52:09,418 - WARNING - tools.py:63 - Low confidence match (score: 1.0152926445007324). Ignoring.
2025-10-22 19:52:09,419 - INFO - graph.py:101 - Drug not found locally.
2025-10-22 19:52:09,420 - INFO - graph.py:108 - --- NODE: Checking external FDA API ---
2025-10-22 19:52:09,421 - INFO - tools.py:74 - --- TOOL: Querying FDA API for 'aspirin' ---
2025-10-22 19:52:12,233 - INFO - tools.py:101 - Found match for 'aspirin' in FDA API.
2025-10-22 19:52:12,236 - INFO - graph.py:115 - Drug found in FDA API.
2025-10-22 19:52:12,237 - INFO - graph.py:127 - --- NODE: Classifying ingredients (with web search) ---
2025-10-22 19:52:12,239 - INFO - tools.py:125 - --- TOOL: Performing web search for 'therapeutic category and common allergens for Active ingredient (in each tablet) Aspirin' ---
2025-10-22 19:52:30,954 - INFO - graph.py:149 - Successfully classified ingredients.
2025-10-22 19:52:30,960 - INFO - graph.py:160 - --- NODE: Finding alternatives (with web search) ---
2025-10-22 19:52:30,962 - INFO - tools.py:125 - --- TOOL: Performing web search for 'alternative brand names for Active ingredient (in each tablet) Aspirin' ---
2025-10-22 19:52:41,689 - INFO - graph.py:184 - Found alternatives: ['Ecotrin', 'Vazalore', 'Bayer Aspirin', 'Disprin', 'Aspro Clear']
2025-10-22 19:52:41,690 - INFO - app.py:92 - Graph execution finished for 'aspirin'. Final State keys: dict_keys(['drug_name', 'original_drug_name', 'data', 'classification', 'alternatives', 'error'])
